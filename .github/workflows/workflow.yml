---
# yamllint disable rule:line-length

name: Tests
on:  # yamllint disable-line rule:truthy
  push:
    branches:
      - master
      - release*
    tags:
      - "*"
  pull_request:
    branches:
      - master
      - release*
  schedule:
    - cron: "27 2 * * 2"  # 2:27 every Tuesday

env:
  CONTAINER_REPO: "quay.io/johnstrunk/fs-performance"

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-20.04

    steps:
      - name: Checkout source
        uses: actions/checkout@v2

      - name: Install prereqs
        run: |
          echo 'APT::Acquire::Retries "5";' | sudo tee /etc/apt/apt.conf.d/80-retries
          sudo apt-get update
          sudo DEBIAN_FRONTEND=noninteractive apt-get install -y python3-pip ruby
          sudo gem install asciidoctor mdl
          sudo pip3 install yamllint
      - name: Run linters
        run: ./.travis/pre-commit.sh --require-all

  build:
    name: Build
    runs-on: ubuntu-20.04

    steps:
      - name: Checkout source
        uses: actions/checkout@v2

      - name: Build
        run: ./build.sh

      - name: Export container image
        run: docker save -o /tmp/image.tar ${CONTAINER_REPO}

      - name: Save container as artifact
        uses: actions/upload-artifact@v1
        with:
          name: container
          path: /tmp/image.tar

  push:
    name: Push container to registry
    needs: [build, lint]
    if: >
      (github.event_name == 'push' || github.event_name == 'schedule') &&
      (github.ref == 'refs/heads/master' || startsWith(github.ref, 'refs/tags/v'))
    runs-on: ubuntu-latest

    steps:
      - name: Load container artifact
        uses: actions/download-artifact@v1
        with:
          name: container
          path: /tmp

      - name: Import container image
        run: |
          docker load -i /tmp/image.tar
          docker inspect ${CONTAINER_REPO}
      - name: Login to registry
        # If the registry server is specified in the image name, we use that.
        # If the server isn't in the image name, default to docker.io
        run: |
          [[ "${CONTAINER_REPO}" =~ ^([^/]+)/[^/]+/[^/]+ ]] && REGISTRY="${BASH_REMATCH[1]}" || REGISTRY="docker.io"
          echo "Attempting docker login to: ${REGISTRY}"
          echo "${{ secrets.REGISTRY_PASSWORD }}" | docker login -u "${{ secrets.REGISTRY_USERNAME }}" --password-stdin ${REGISTRY}
      - name: Push to registry (latest)
        if: >
          (github.event_name == 'push' || github.event_name == 'schedule') &&
          github.ref == 'refs/heads/master'
        run: |
          docker push "${CONTAINER_REPO}"
      - name: Push to registry (version tag)
        if: >
          (github.event_name == 'push' || github.event_name == 'schedule') &&
          startsWith(github.ref, 'refs/tags/v')
        run: |
          [[ "${{ github.ref }}" =~ ^refs/tags/v([0-9]+\..*) ]] || exit 0
          TAG="${BASH_REMATCH[1]}"
          echo "Pushing to $TAG"
          docker tag "${CONTAINER_REPO}" "${CONTAINER_REPO}:${TAG}"
          docker push "${CONTAINER_REPO}:${TAG}"
